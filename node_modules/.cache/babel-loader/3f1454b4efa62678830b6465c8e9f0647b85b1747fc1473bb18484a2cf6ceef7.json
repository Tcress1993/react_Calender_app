{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./calendar.css';import EventDetails from'./eventDetails';import EventForm from'./eventForm';import*as eventActions from'../actions/eventAction';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Calendar=()=>{const[currentDate,setCurrentDate]=useState(new Date());const[events,setEvents]=useState([]);const[selectedEvent,setSelectedEvent]=useState(null);const[showEventForm,setShowEventForm]=useState(false);const[eventToEdit,setEventToEdit]=useState(null);const[selectedDay,setSelectedDay]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const today=new Date();//get the current monght and year\nconst currentMonth=currentDate.getMonth();const currentYear=currentDate.getFullYear();//get the first day and the last day of the month\nconst firstDay=new Date(currentYear,currentMonth,1).getDay();const lastDate=new Date(currentYear,currentMonth+1,0).getDate();//get the day of the week the month starts\nconst startDay=firstDay;//get an array of days for the month\nconst days=[];for(let i=1;i<=lastDate;i++){days.push(i);}//get the events for the current month\nuseEffect(()=>{const fetchEvents=async()=>{setLoading(true);try{await eventActions.fetchEvents()({dispatch:action=>{if(action.type==='FETCH_EVENTS'){setEvents(action.EVENT);}}});}catch(err){setError(err.message);}finally{setLoading(false);}};fetchEvents();},[currentMonth,currentYear]);//add and event to the calender\nconst addEvent=async event=>{try{await eventActions.addEvent(event)({dispatch:action=>{if(action.type==='ADD_EVENT'){setEvents(action.EVENTS);setSelectedDay(null);}}});}catch(err){setError(err.message);}};//edit an event in the calender\nconst editEvent=async event=>{try{await eventActions.updateEvent(event)({dispatch:action=>{if(action.type==='UPDATE_EVENT'){setEvents(action.EVENTS);setEventToEdit(null);}}});}catch(err){setError(err.message);}};//delete an event from the calender\nconst deleteEvent=async eventId=>{try{await eventActions.deleteEvent(eventId)({dispatch:action=>{if(action.type==='DELETE_EVENT'){setEvents(action.EVENTS);setSelectedEvent(null);}}});}catch(err){setError(err.message);}};//logic to get the previous and next months\nconst prevMonth=()=>{setCurrentDate(new Date(currentYear,currentMonth-1,1));};const nextMonth=()=>{setCurrentDate(new Date(currentYear,currentMonth+1,1));};//handle the click events \nconst handleEventClick=event=>{setSelectedEvent(event);};const handleDayClick=day=>{setSelectedDay(day);};const handleEditEvent=event=>{setEventToEdit(event);setShowEventForm(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-header\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:prevMonth,children:\"Previous\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[currentDate.toLocaleString('default',{month:'long'}),\" \",currentYear]}),/*#__PURE__*/_jsx(\"button\",{onClick:nextMonth,children:\"Next\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-grid\",children:[Array.from({length:startDay}).map((_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"calendar-day empty\"},`empty-${index}`)),days.map(day=>/*#__PURE__*/_jsxs(\"div\",{className:`calendar-day ${today.getDate()===day&&today.getMonth()===currentMonth&&today.getFullYear()===currentYear?'today':''}`,onClick:()=>handleDayClick(day),children:[/*#__PURE__*/_jsx(\"span\",{className:\"day-number\",children:day}),events.filter(event=>new Date(event.date).getDate()===day).map(event=>/*#__PURE__*/_jsxs(\"div\",{className:\"event\",onClick:e=>{e.stopPropagation();// Prevent triggering the day click\nhandleEventClick(event);},children:[event.title,\" - \",event.time]},event.id))]},day))]}),selectedEvent&&/*#__PURE__*/_jsx(EventDetails,{event:selectedEvent,onClose:()=>setSelectedEvent(null),onEdit:handleEditEvent,onDelete:deleteEvent}),selectedDay&&!eventToEdit&&/*#__PURE__*/_jsx(EventForm,{date:selectedDay,month:currentMonth+1,year:currentYear,onClose:()=>setSelectedDay(null)})]});};export default Calendar;","map":{"version":3,"names":["React","useState","useEffect","EventDetails","EventForm","eventActions","jsx","_jsx","jsxs","_jsxs","Calendar","currentDate","setCurrentDate","Date","events","setEvents","selectedEvent","setSelectedEvent","showEventForm","setShowEventForm","eventToEdit","setEventToEdit","selectedDay","setSelectedDay","loading","setLoading","error","setError","today","currentMonth","getMonth","currentYear","getFullYear","firstDay","getDay","lastDate","getDate","startDay","days","i","push","fetchEvents","dispatch","action","type","EVENT","err","message","addEvent","event","EVENTS","editEvent","updateEvent","deleteEvent","eventId","prevMonth","nextMonth","handleEventClick","handleDayClick","day","handleEditEvent","className","children","onClick","toLocaleString","month","Array","from","length","map","_","index","filter","date","e","stopPropagation","title","time","id","onClose","onEdit","onDelete","year"],"sources":["C:/Users/SPeCS/OneDrive/Documents/Web API/final project(calender app)/react_Calender_app/src/components/calendar.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './calendar.css';\r\nimport EventDetails from './eventDetails';\r\nimport EventForm from './eventForm';\r\n\r\nimport * as eventActions from '../actions/eventAction';\r\n\r\n\r\nconst Calendar = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [events, setEvents] = useState([]);\r\n    \r\n    const [selectedEvent, setSelectedEvent] = useState(null);\r\n    const [showEventForm, setShowEventForm] = useState(false);\r\n    const [eventToEdit, setEventToEdit] = useState(null);\r\n    const [selectedDay, setSelectedDay] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n   \r\n    const today = new Date();\r\n\r\n    //get the current monght and year\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentYear = currentDate.getFullYear();\r\n\r\n    //get the first day and the last day of the month\r\n    const firstDay = new Date(currentYear, currentMonth, 1).getDay();\r\n    const lastDate = new Date(currentYear, currentMonth + 1, 0).getDate();\r\n\r\n    //get the day of the week the month starts\r\n    const startDay = firstDay;\r\n\r\n    //get an array of days for the month\r\n    const days = [];\r\n    for (let i =1; i<= lastDate; i++){\r\n        days.push(i);\r\n    }\r\n\r\n    //get the events for the current month\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            setLoading(true);\r\n            try {\r\n                await eventActions.fetchEvents()({\r\n                    dispatch: (action) => {\r\n                        if (action.type === 'FETCH_EVENTS') {\r\n                            setEvents(action.EVENT);\r\n                        }\r\n                    },\r\n                });\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEvents();\r\n    }, [currentMonth, currentYear]);\r\n\r\n    \r\n\r\n    //add and event to the calender\r\n    const addEvent = async (event) =>{\r\n        try{\r\n            await eventActions.addEvent(event)({\r\n                dispatch: (action) => {\r\n                    if (action.type === 'ADD_EVENT') {\r\n                        setEvents(action.EVENTS);\r\n                        setSelectedDay(null);\r\n                    }\r\n                },\r\n            });\r\n                }catch(err){\r\n                    setError(err.message);\r\n                }\r\n        };\r\n    //edit an event in the calender\r\n    const editEvent = async (event) => {\r\n        try{\r\n            await eventActions.updateEvent(event)({\r\n                dispatch: (action) =>{\r\n                    if (action.type === 'UPDATE_EVENT'){\r\n                        setEvents(action.EVENTS);\r\n                        setEventToEdit(null);\r\n                    }\r\n                },\r\n            });\r\n        }catch(err){\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    //delete an event from the calender\r\n    const deleteEvent = async (eventId) => {\r\n        try{\r\n            await eventActions.deleteEvent(eventId)({\r\n                dispatch: (action) => {\r\n                    if (action.type === 'DELETE_EVENT') {\r\n                        setEvents(action.EVENTS);\r\n                        setSelectedEvent(null);\r\n                    }\r\n                },\r\n            });\r\n        }catch(err){\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    //logic to get the previous and next months\r\n    const prevMonth = () => {\r\n        setCurrentDate(new Date(currentYear, currentMonth - 1, 1));\r\n    };\r\n    const nextMonth = () => {\r\n        setCurrentDate(new Date(currentYear, currentMonth + 1, 1));\r\n    };\r\n\r\n    //handle the click events \r\n    const handleEventClick = (event) => {\r\n        setSelectedEvent(event);\r\n    };\r\n    const handleDayClick = (day) => {\r\n        setSelectedDay(day);\r\n    };\r\n    \r\n\r\n    const handleEditEvent = (event) =>{\r\n        setEventToEdit(event);\r\n        setShowEventForm(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"calendar\">\r\n            <div className = \"calendar-header\">\r\n                {/*create a previous button that will go the previous month*/}\r\n                <button onClick = {prevMonth}>Previous</button>\r\n                <h2>\r\n                    {currentDate.toLocaleString('default', {month: 'long'})} {currentYear}\r\n                </h2>\r\n                <button onClick = {nextMonth}>Next</button>\r\n                \r\n            </div>\r\n\r\n            {/*set up the calander as a grid*/}\r\n            <div className = \"calendar-grid\">\r\n                {/*sets empty cell to align the grid*/}\r\n                {Array.from({length: startDay}).map((_, index) => (\r\n                    <div key = {`empty-${index}`} className = \"calendar-day empty\"></div>\r\n                ))}\r\n                {/*set the days of the month*/}\r\n                {days.map((day) => (\r\n                    <div key={day}\r\n                    className={`calendar-day ${today.getDate() === day && today.getMonth() === currentMonth && today.getFullYear() === currentYear ? 'today' : ''}`}\r\n                    onClick={() => handleDayClick(day)}\r\n                >\r\n                    <span className=\"day-number\">{day}</span>\r\n                        {events .filter((event) => new Date(event.date). getDate() === day)\r\n                        .map((event) => (\r\n                            <div\r\n                                    key={event.id}\r\n                                    className=\"event\"\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation(); // Prevent triggering the day click\r\n                                        handleEventClick(event);\r\n                                    }}\r\n                                >\r\n                                {event.title} - {event.time}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {/*uses eventDetails.js when an envent is selected*/}\r\n            {selectedEvent && (\r\n                <EventDetails\r\n                    event = {selectedEvent}\r\n                    onClose={() => setSelectedEvent(null)}\r\n                    onEdit={handleEditEvent}\r\n                    onDelete={deleteEvent}\r\n                />\r\n            )}\r\n            {/*uses eventForm.js when the add event button is clicked*/}\r\n            {selectedDay && !eventToEdit &&(\r\n                <EventForm\r\n                    date = {selectedDay}\r\n                    month = {currentMonth +1}\r\n                    year={currentYear}\r\n                    onClose={() => setSelectedDay(null)}\r\n                    />\r\n            )}\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}