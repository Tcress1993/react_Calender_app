{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { thunk } from 'redux-thunk';\nimport authReducer from \"../reducers/authReducer\";\nimport eventReducer from \"../reducers/eventReducer\";\n//\n\nif (process.env.NODE_ENV === 'development') {\n  const {\n    logger\n  } = require('redux-logger');\n  middlewares.push(logger);\n}\nconst store = configureStore({\n  reducer: {\n    auth: authReducer,\n    event: eventReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunk)\n});\nexport default store;","map":{"version":3,"names":["configureStore","thunk","authReducer","eventReducer","process","env","NODE_ENV","logger","require","middlewares","push","store","reducer","auth","event","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/SPeCS/OneDrive/Documents/Web API/final project(calender app)/react_Calender_app/src/stores/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport {thunk} from 'redux-thunk';\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport eventReducer from \"../reducers/eventReducer\";\r\n//\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    const { logger } = require('redux-logger');\r\n\r\n    middlewares.push(logger);\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        event: eventReducer\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware().concat(thunk)\r\n});\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAAQC,KAAK,QAAO,aAAa;AACjC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,YAAY,MAAM,0BAA0B;AACnD;;AAEA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EACxC,MAAM;IAAEC;EAAO,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;EAE1CC,WAAW,CAACC,IAAI,CAACH,MAAM,CAAC;AAC5B;AAEA,MAAMI,KAAK,GAAGX,cAAc,CAAC;EACzBY,OAAO,EAAE;IACLC,IAAI,EAAEX,WAAW;IACjBY,KAAK,EAAEX;EACX,CAAC;EACDY,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAAChB,KAAK;AAC3C,CAAC,CAAC;AAEF,eAAeU,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}