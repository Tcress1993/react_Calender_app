{"ast":null,"code":"import actionTypes from '../constants/actionTypes';\nconst env = process.env;\nfunction eventsFetched(events) {\n  return {\n    type: actionTypes.FETCH_EVENTS,\n    EVENTS: events\n  };\n}\nfunction eventFetched(event) {\n  return {\n    type: actionTypes.FETCH_EVENT,\n    EVENT: event\n  };\n}\nfunction eventSet(event) {\n  return {\n    type: actionTypes.SET_EVENT,\n    EVENT: event\n  };\n}\nexport function setEvent(event) {\n  return dispatch => {\n    dispatch(eventSet(event));\n  };\n}\nexport function fetchEvent(eventId) {\n  return dispatch => {\n    return fetch(`${env.REACT_APP_API_URL}/events/${eventId}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json',\n        'Authorization': localStorage.getItem('token')\n      },\n      mode: 'cors'\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json();\n    }).then(res => {\n      dispatch(eventFetched(res));\n    }).catch(e => console.log(e));\n  };\n}\nexport function fetchEvents(currentMonth, currentYear) {\n  console.log(\"fetch is bing called\");\n  return dispatch => {\n    return fetch(`${process.env.REACT_APP_API_URL}/events?month=${currentMonth}&year=${currentYear}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json',\n        'Authorization': localStorage.getItem('token')\n      },\n      mode: 'cors'\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json();\n    }).then(res => {\n      console.log(`fetched events ${res}`);\n      dispatch(eventsFetched(res));\n    }).catch(e => console.log(e));\n  };\n}\nexport function addEvent(event) {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    console.log(token);\n    return fetch(`${env.REACT_APP_API_URL}/events`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json',\n        'Authorization': localStorage.getItem('token')\n      },\n      body: JSON.stringify(event),\n      mode: 'cors'\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json();\n    }).then(res => {\n      dispatch(fetchEvents());\n    }).catch(e => console.log(e));\n  };\n}\nexport function deleteEvent(eventId) {\n  return dispatch => {\n    return fetch(`${env.REACT_APP_API_URL}/events/${eventId}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json',\n        'Authorization': localStorage.getItem('token')\n      },\n      mode: 'cors'\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json();\n    }).then(res => {\n      dispatch(fetchEvents());\n    }).catch(e => console.log(e));\n  };\n}\nexport function updateEvent(eventId, event) {\n  return dispatch => {\n    return fetch(`${env.REACT_APP_API_URL}/events/${eventId}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json',\n        'Authorization': localStorage.getItem('token')\n      },\n      body: JSON.stringify(event),\n      mode: 'cors'\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json();\n    }).then(res => {\n      dispatch(fetchEvents());\n    }).catch(e => console.log(e));\n  };\n}","map":{"version":3,"names":["actionTypes","env","process","eventsFetched","events","type","FETCH_EVENTS","EVENTS","eventFetched","event","FETCH_EVENT","EVENT","eventSet","SET_EVENT","setEvent","dispatch","fetchEvent","eventId","fetch","REACT_APP_API_URL","method","headers","localStorage","getItem","mode","then","response","ok","Error","statusText","json","res","catch","e","console","log","fetchEvents","currentMonth","currentYear","addEvent","token","body","JSON","stringify","deleteEvent","updateEvent"],"sources":["C:/Users/SPeCS/OneDrive/Documents/Web API/final project(calender app)/react_Calender_app/src/actions/eventAction.js"],"sourcesContent":["import actionTypes from '../constants/actionTypes';\r\n\r\n\r\nconst env = process.env;\r\n\r\nfunction eventsFetched(events){\r\n    return{\r\n        type: actionTypes.FETCH_EVENTS,\r\n        EVENTS: events\r\n    }\r\n}\r\n\r\nfunction eventFetched(event){\r\n    return{\r\n        type: actionTypes.FETCH_EVENT,\r\n        EVENT: event\r\n    }\r\n}\r\n\r\nfunction eventSet(event){\r\n    return{\r\n        type: actionTypes.SET_EVENT,\r\n        EVENT: event\r\n    }\r\n}\r\n\r\nexport function setEvent(event){\r\n    return dispatch =>{\r\n        dispatch(eventSet(event));\r\n    }\r\n}\r\n\r\nexport function fetchEvent(eventId){\r\n    return dispatch =>{\r\n        return fetch(`${env.REACT_APP_API_URL}/events/${eventId}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok){\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            dispatch(eventFetched(res));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\nexport function fetchEvents(currentMonth, currentYear){\r\n    console.log(\"fetch is bing called\");\r\n    return dispatch =>{\r\n        return fetch(`${process.env.REACT_APP_API_URL}/events?month=${currentMonth}&year=${currentYear}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok){\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            console.log(`fetched events ${res}`)\r\n            dispatch(eventsFetched(res));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\nexport function addEvent(event){\r\n    return dispatch =>{\r\n        const token = localStorage.getItem('token');\r\n        console.log(token);\r\n        return fetch(`${env.REACT_APP_API_URL}/events`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(event),\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok){\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            dispatch(fetchEvents());\r\n        }).catch((e) => console.log(e));\r\n    }\r\n\r\n}\r\n\r\nexport function deleteEvent(eventId){\r\n    return dispatch =>{\r\n        return fetch(`${env.REACT_APP_API_URL}/events/${eventId}`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok){\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            dispatch(fetchEvents());\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\nexport function updateEvent(eventId, event){\r\n    return dispatch =>{\r\n        return fetch(`${env.REACT_APP_API_URL}/events/${eventId}`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(event),\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok){\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            dispatch(fetchEvents());\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}